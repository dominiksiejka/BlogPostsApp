{"version":3,"sources":["components/DeletePost.js","actions/fetchDataBase.js","actions/actionCreator.js","reducers/reducerIndex.js","reducers/getDataReducer.js","components/PostsList/SinglePost.js","components/PostsList/Home.js","components/newPost/NewPost.js","components/ShowPost.js","rootComponent/App.js","index.js","components/newPost/newPost.module.css"],"names":["lastPost","fetchData","axios","create","baseURL","params","key","FETCH_DATA","FETCH_POST","DELETE_POST","combineReducers","blogs","state","action","type","filter","itm","id","payload","singlePost","form","formReducer","SinglePost","title","content","className","to","connect","getDataFromApi","dispatch","a","get","response","data","useEffect","render","map","post","isFetched","length","deletePost","callback","delete","then","props","onClick","history","push","reduxForm","validate","values","error","categories","createPost","renderField","field","errorAppeard","meta","touched","border","classes","titleForm","fieldTitle","style","input","autoComplete","color","handleSubmit","newPostContainer","newPostTitle","formToSubmit","onSubmit","clearAllInputs","Field","name","component","fetchPost","match","setTimeout","App","exact","path","Home","NewPost","DeletePost","ShowPost","from","store","createStore","combineReducer","applyMiddleware","thunk","reactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c1890ac0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./posts.css\";\r\nimport { deletePost } from \"../actions/actionCreator\";\r\nlet lastPost;\r\nconst DeletePost = (props) => {\r\n  if (!props.singlePost) {\r\n    return (\r\n      <div className='delete-section-container'>\r\n        <p>You need first to pick up a post</p>\r\n      </div>\r\n    );\r\n  } else if (lastPost === props.singlePost.id) {\r\n    return (\r\n      <div className='delete-section-container'>\r\n        <p>pick different post, last already deleted</p>\r\n      </div>\r\n    );\r\n  }\r\n  lastPost = props.singlePost.id;\r\n\r\n  const handlePostDeletion = () => {\r\n    props.deletePost(props.singlePost.id, () => {\r\n      props.history.push(\"/\");\r\n    });\r\n  };\r\n  return (\r\n    <div className='delete-section-container'>\r\n      <div className='single-post-info-container'>\r\n        <h1>Sigle post deletion</h1>\r\n        <h3>\r\n          Title of the post : \" <span>{props.singlePost.title} </span>\"\r\n        </h3>\r\n        <p>Are you sure you want to delete this post ?</p>\r\n        <button className='delete-btn' onClick={handlePostDeletion}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ singlePost }) => {\r\n  return { singlePost };\r\n};\r\nexport default connect(mapStateToProps, { deletePost })(DeletePost);\r\n","import axios from \"axios\";\r\nconst fetchData = axios.create({\r\n  baseURL: \"https://reduxblog.herokuapp.com\",\r\n  params: {\r\n    key: \"dominik12345\",\r\n  },\r\n});\r\nexport default fetchData;\r\n","import fetchData from \"./fetchDataBase\";\r\nexport const FETCH_DATA = \"FETCH_DATA\";\r\nexport const CREATE_POST = \"CREATE_POST\";\r\nexport const FETCH_POST = \"FETCH_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\nexport const getDataFromApi = () => async (dispatch) => {\r\n  const response = await fetchData.get(\"/api/posts\");\r\n  dispatch({ type: FETCH_DATA, payload: response.data });\r\n};\r\n\r\nexport const createPost = (values, callback) => {\r\n  const request = fetchData.post(\"/api/posts\", values).then(() => callback());\r\n  return {\r\n    type: CREATE_POST,\r\n    payload: request,\r\n  };\r\n};\r\n\r\nexport const fetchPost = (id) => async (dispatch) => {\r\n  const response = await fetchData.get(`/api/posts/${id}`);\r\n  dispatch({ type: FETCH_POST, payload: response.data });\r\n};\r\n\r\nexport const deletePost = (id, callback) => {\r\n  fetchData.delete(`/api/posts/${id}`).then(() => callback());\r\n  return { type: DELETE_POST, payload: id };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { getSinglePost } from \"./getDataReducer\";\r\nimport { getDataReducer } from \"./getDataReducer\";\r\n\r\nexport default combineReducers({\r\n  blogs: getDataReducer,\r\n  singlePost: getSinglePost,\r\n  form: formReducer,\r\n});\r\n","import { FETCH_DATA } from \"../actions/actionCreator\";\r\nimport { FETCH_POST } from \"../actions/actionCreator\";\r\nimport { DELETE_POST } from \"../actions/actionCreator\";\r\nexport const getDataReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case DELETE_POST:\r\n      return state.filter((itm) => itm.id !== action.payload);\r\n    case FETCH_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getSinglePost = (state = \"\", action) => {\r\n  if (action.type === FETCH_POST) {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SinglePost = ({ id, title, content }) => {\r\n  return (\r\n    <li className='posts-lists__item'>\r\n      <h3 className='posts-lists__title'>{title}</h3>\r\n      <p id='post-content'>{content}</p>\r\n      <Link to={`/posts/${id}`}> More info </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getDataFromApi } from \"../../actions/actionCreator\";\r\nimport SinglePost from \"./SinglePost\";\r\nimport \"./List.css\";\r\nconst DeletePost = ({ getDataFromApi, blogs }) => {\r\n  useEffect(() => {\r\n    getDataFromApi();\r\n  }, [getDataFromApi]);\r\n\r\n  const render = blogs.map((post) => <SinglePost key={post.id} {...post} />);\r\n  const isFetched = blogs.length !== 0 ? render : null;\r\n  return (\r\n    <div>\r\n      <h1 className='list-title'>List of Posts: </h1>\r\n      <ul className='posts-list'>{isFetched}</ul>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { blogs: state.blogs };\r\n};\r\nexport default connect(mapStateToProps, { getDataFromApi })(DeletePost);\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../../actions/actionCreator\";\r\nimport classes from \"./newPost.module.css\";\r\n\r\nconst NewPost = (props) => {\r\n  const renderField = (field) => {\r\n    const errorAppeard =\r\n      field.meta.error && field.meta.touched\r\n        ? { border: \"1px solid red\" }\r\n        : null;\r\n    return (\r\n      <div className={classes.titleForm}>\r\n        <label>\r\n          {field.fieldTitle}\r\n          <input\r\n            className='title-form__input'\r\n            style={errorAppeard}\r\n            type='text'\r\n            {...field.input}\r\n            autoComplete='off'\r\n          />\r\n        </label>\r\n        <div style={{ color: \"red\" }}>\r\n          {field.meta.touched ? field.meta.error : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const renderTextArea = (field) => {\r\n    const errorAppeard =\r\n      field.meta.error && field.meta.touched\r\n        ? { border: \"1px solid red\" }\r\n        : null;\r\n    return (\r\n      <div className={classes.titleForm}>\r\n        <label>\r\n          {field.fieldTitle}\r\n          <textarea\r\n            style={errorAppeard}\r\n            className='title-form__area'\r\n            type='text'\r\n            {...field.input}\r\n            autoComplete='off'\r\n          />\r\n        </label>\r\n        <div style={{ color: \"red\" }}>\r\n          {field.meta.touched ? field.meta.error : \"\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const clearAllInputs = (values) => {\r\n    values.title = \"\";\r\n    values.categories = \"\";\r\n    values.content = \"\";\r\n  };\r\n  const onFormSubmit = (values) => {\r\n    props.createPost(values, () => {\r\n      props.history.push(\"/\");\r\n    });\r\n    clearAllInputs(values);\r\n  };\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <div className={classes.newPostContainer}>\r\n      <h1 className={classes.newPostTitle}>Create new post !</h1>\r\n      <form\r\n        className={classes.formToSubmit}\r\n        onSubmit={handleSubmit(onFormSubmit)}\r\n      >\r\n        <Field fieldTitle='Title' name='title' component={renderField} />\r\n        <Field\r\n          fieldTitle='Categories'\r\n          name='categories'\r\n          component={renderField}\r\n        />\r\n        <Field\r\n          fieldTitle='Post Content'\r\n          name='content'\r\n          component={renderTextArea}\r\n        />\r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst validate = (values) => {\r\n  const error = {};\r\n\r\n  if (!values.title || values.title.length < 3) {\r\n    error.title = \"Enter a title, it must have at least 3 characters\";\r\n  }\r\n  if (!values.categories) {\r\n    error.categories = \"Enter a category name\";\r\n  }\r\n  if (!values.content) {\r\n    error.content = \"Enter a post summary\";\r\n  }\r\n\r\n  return error;\r\n};\r\n\r\nexport default reduxForm({ validate, form: \"Post Adding\" })(\r\n  connect(null, { createPost })(NewPost)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPost } from \"../actions/actionCreator\";\r\nimport \"./posts.css\";\r\n\r\nconst ShowPost = (props) => {\r\n  useEffect(() => {\r\n    props.fetchPost(props.match.params.id);\r\n  }, [props]);\r\n  setTimeout(() => {}, 100);\r\n  if (!props.post) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className='delete-section-container'>\r\n      <div className='single-post-info-container'>\r\n        <h1>Single Post Info</h1>\r\n        <h3>\r\n          Post title: <span>{props.post.title}</span>\r\n        </h3>\r\n        <h6>\r\n          Categories: <span>{props.post.categories}</span>\r\n        </h6>\r\n        <p>\r\n          Content:\r\n          <br />\r\n          <span>{props.post.content}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = ({ singlePost }) => {\r\n  return { post: singlePost };\r\n};\r\nexport default connect(mapStateToProps, { fetchPost })(ShowPost);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  NavLink,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from \"../components/PostsList/Home\";\r\nimport DeletePost from \"../components/DeletePost\";\r\nimport NewPost from \"../components/newPost/NewPost\";\r\nimport ShowPost from \"../components/ShowPost\";\r\n\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className='container'>\r\n        <nav className='main-menu'>\r\n          <li className='main-menu__item'>\r\n            <NavLink to='/' exact>\r\n              Posts List\r\n            </NavLink>\r\n          </li>\r\n          <li className='main-menu__item'>\r\n            <NavLink to='/posts/new'>Create New Post</NavLink>\r\n          </li>\r\n          <li className='main-menu__item'>\r\n            <NavLink to='/posts/delete'>Delete Post</NavLink>\r\n          </li>\r\n        </nav>\r\n\r\n        <main className='main-content'>\r\n          <Switch>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/posts/new' component={NewPost} />\r\n            <Route path='/posts/delete' component={DeletePost} />\r\n            <Route path='/posts/:id' component={ShowPost} />\r\n            <Redirect from='*' to='/' />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport reactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport combineReducer from \"./reducers/reducerIndex\";\r\nimport App from \"./rootComponent/App\";\r\n\r\nconst store = createStore(combineReducer, applyMiddleware(thunk));\r\n\r\nreactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPostContainer\":\"newPost_newPostContainer__3c8VJ\",\"newPostTitle\":\"newPost_newPostTitle__13pih\",\"formToSubmit\":\"newPost_formToSubmit__3TJJO\",\"titleForm\":\"newPost_titleForm__YxRqc\",\"btnMove\":\"newPost_btnMove__1IFXY\"};"],"sourceRoot":""}